; *****************************************************************************
; *                                                                           *
; *                     Macros fÅr den SVGA.BGI Treiber                       *
; *                                                                           *
; * (C) 1990-94 by                                                            *
; * Ullrich von Bassewitz                                                     *
; * ZwehrenbÅhlstra·e 33                                                      *
; * D-72070 TÅbingen                                                          *
; *                                                                           *
; * E-Mail: uz@ibb.schwaben.de                                                *
; *                                                                           *
; *****************************************************************************



MACRO   LOOPCX  Lbl
	IF P80386
	        dec     cx
	        jnz     Lbl
        ELSE
		loop	Lbl
	ENDIF
ENDM    LOOPCX



MACRO   EnterProc  LocalSize
IF      LocalSize
        IF P80286
                enter   LocalSize, 0
        ELSE
                push    bp
                mov     bp, sp
                sub     sp, LocalSize
        ENDIF
ELSE
        push    bp
        mov     bp, sp
ENDIF
ENDM


MACRO	Add2 Reg
	IF P80386        
		add     Reg, 2
	ELSE
		inc     Reg
		inc     Reg
ENDIF
ENDM

MACRO	Sub2 Reg
	IF P80386        
		sub	Reg, 2
	ELSE
		dec     Reg
		dec     Reg
ENDIF
ENDM





MACRO   LeaveProc
IF P80286
        leave
ELSE
        mov     sp, bp
        pop     bp
ENDIF
ENDM


MACRO	RepMovS
IF P80386
	push    cx
	shr     cx, 2
	rep	movsd
	pop     cx
	and     cx, 3
	rep	movsb
ELSE
        shr     cx, 1                   ; / 2 fÅr Worte
        rep     movsw                   ; Worte kopieren
        adc     cx, cx                  ; Noch ein Carry Åbrig ?
        rep     movsb                   ; Byte kopieren falls Carry
ENDIF
ENDM


MACRO	RepStoS
IF P80386
	push	ax
	push	ax
	pop	eax
	push    cx
	shr     cx, 2
	rep	stosd
	pop     cx
	and     cx, 3
	rep	stosb
ELSE
        shr     cx, 1                   ; / 2 fÅr Worte
        rep     stosw                   ; Worte kopieren
        adc     cx, cx                  ; Noch ein Carry Åbrig ?
        rep     stosb                   ; Byte kopieren falls Carry
ENDIF
ENDM



; Der folgende Macro berechnet die Adresse zu einer Position in X/Y und
; setzt das Segment passend. Seg64 mu· ein aktives Segment enthalten,
; ax enthÑlt den Y und bx den X-Wert. Das Macro zerstîrt ax und dx und
; liefert in ax den Offset.
; ds mu· auf das Codesegment zeigen (d.h. die Variable mÅssen verfÅgbar
; sein).


MACRO   CalcAdr
LOCAL   @@L1
        add     ax, [PageOfs]           ;; Korrektur fÅr Bildschirmseite
        mul     [BytesPerLine]
        add     ax, bx                  ;; Offset aufaddieren
        adc     dl, 0                   ;; öberlauf
        cmp     dl, [Seg64]             ;; Segment schon ok ?
        je      @@L1                    ;; Stimmt schon
        mov     [Seg64], dl             ;; Segment setzen
        call    [SegSelect]             ;; und einstellen
@@L1:

ENDM



MACRO   SetToDS Reg
IF      VER3
        mov     Reg, [DSeg]
ELSE
        push    cs
        pop     Reg
ENDIF
ENDM




MACRO   RESETCPU
IF      P80386
        P386N
ELSEIF  P80286
        P286N
ELSE
        P8086
ENDIF

ENDM

