; [Comments translated from German to English]

; *****************************************************************************
; *                                                                           *
; *       Environment evaluation (options) for the SVGA.BGI driver            *
; *                                                                           *
; * (C) 1990-94                                                               *
; * Ullrich von Bassewitz                                                     *
; * Zwehrenb�hlstra�e 33                                                      *
; * D-72070 T�bingen                                                          *
; *                                                                           *
; * E-Mail: uz@ibb.schwaben.de                                                *
; *                                                                           *
; *****************************************************************************



; Searches in the program environment for a string "SVGAOPTS=". If this is
; found, the options word is set accordingly based on the contents.
; Options so far:
;
;       F       = OpFastVesaOff
;       V       = OpNoVesa
;       3       = Do not use S3 Graphics Engine
;
; ATTENTION: The DOS functions 51h and 62h already return a selector in bx
; in protected mode! Likewise, the value at offset 2Ch in the PSP segment
; in protected mode is already a selector!
;

PROC    GetOpts       NEAR

        mov     ah, 30h
        int     21h                     ; get DOS version
        xchg    ax, bx                  ; version to bx
        mov     ax, 5100h               ; get PSP < DOS 3.0
        cmp     bl, 3                   ; version < 3 ?
        jb      @@L1                    ; jump if yes
        mov     ax, 6200h               ; get PSP DOS >= 3.0
@@L1:   int     21h
        mov     dx, ds                  ; save data segment
        mov     ds, bx                  ; PSP segment to ds
        mov     ds, [WORD ds:2Ch]       ; get environment segment

        mov     es, dx                  ; es points to data segment
        xor     si, si
        cld
@@L2:   mov     di, OFFSET OptText      ; string
        mov     cl, [BYTE es:di]        ; length to cl
        xor     ch, ch                  ; ... in cx
        inc     di                      ; pointer behind length byte
        repz    cmpsb                   ; entry found?
        jz      @@L4                    ; entry found!
        dec     si                      ; otherwise go back one character
@@L3:   lodsb                           ; and search for terminating 0
        test    al, al                  ; 0 (= end)?
        jnz     @@L3                    ; no, keep searching
        cmp     al, [BYTE si]           ; second 0 (= end of table)?
        jne     @@L2                    ; no, keep searching

; Environment entry not found

        xor     di, di                  ; clear options
        jmp     @@L9

; Environment entry found

@@L4:   xor     di, di                  ; options
@@L5:   lodsb                           ; get character
        test    al, al                  ; end of string?
        jz      @@L99                   ; jump if yes
        cmp     al, 'F'                 ; OpFastVESAOff?
        jnz     @@L6
        or      di, OpFastVesaOff
@@L6:   cmp     al, 'V'                 ; OpNoVesa?
        jnz     @@L7
        or      di, OpNoVesa
@@L7:   cmp     al, '3'
        jnz     @@L8
        or      di, opNoS3Hardware
@@L8:   cmp     al, 'M'
        jnz     @@L9
        or      di, opUseVesaModes
@@L9:   jmp     @@L5

; Done, options are in di

@@L99:  mov     ds, dx                  ; data segment to ds
        mov     [Options], di           ; store options
        ret

ENDP    GetOpts

